(this["webpackJsonpphoto-app-react"] = this["webpackJsonpphoto-app-react"] || []).push([[0], { 14: function (e, t, n) { }, 15: function (e, t, n) { "use strict"; n.r(t); var s = n(1), o = n.n(s), i = n(7), a = n.n(i), c = n(3), r = n(4), l = n(6), u = n(5), h = n(0), d = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n() { return Object(c.a)(this, n), t.apply(this, arguments) } return Object(r.a)(n, [{ key: "render", value: function () { return Object(h.jsxs)("ul", { children: [Object(h.jsx)("li", { children: Object(h.jsx)("a", { href: "/api", children: "API Docs" }) }), Object(h.jsx)("li", { children: Object(h.jsx)("span", { children: "webdev" }) }), Object(h.jsx)("li", { children: Object(h.jsx)("a", { href: "/logout", children: "Sign out" }) })] }) } }]), n }(o.a.Component), j = d, b = n(2), p = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n() { return Object(c.a)(this, n), t.apply(this, arguments) } return Object(r.a)(n, [{ key: "render", value: function () { return this.props.model ? Object(h.jsxs)("div", { children: [Object(h.jsx)("img", { src: this.props.model.user.thumb_url, className: "pic", alt: "profile pic for " + this.props.model.user.username }), Object(h.jsx)("p", { children: this.props.model.user.username })] }) : Object(h.jsx)("div", {}) } }]), n }(o.a.Component), f = p; function m(e) { for (var t = e + "=", n = decodeURIComponent(document.cookie).split(";"), s = 0; s < n.length; s++) { for (var o = n[s]; " " === o.charAt(0);)o = o.substring(1); if (0 === o.indexOf(t)) return o.substring(t.length, o.length) } return "" } function O() { var e, t = m("access_token_cookie_js"), n = m("csrf_access_token"); return n ? e = { "Content-Type": "application/json", "X-CSRF-TOKEN": n } : t ? e = { "Content-Type": "application/json", Authorization: "Bearer " + t } : console.error("Neither access_token_cookie nor csrf_access_token found"), e } var k = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { stories: null }, s.fetchStories = s.fetchStories.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "componentDidMount", value: function () { this.fetchStories() } }, { key: "fetchStories", value: function () { var e = this; fetch("/api/stories", { headers: O() }).then((function (e) { return e.json() })).then((function (t) { e.setState({ stories: t }) })) } }, { key: "render", value: function () { return this.state.stories ? this.state.stories.map((function (e) { return Object(h.jsx)(f, { model: e }, "story-" + e.id) })) : Object(h.jsx)("div", {}) } }]), n }(o.a.Component), v = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { following_id: null }, s.toggleFollow = s.toggleFollow.bind(Object(b.a)(s)), s.follow = s.follow.bind(Object(b.a)(s)), s.unfollow = s.unfollow.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "toggleFollow", value: function (e) { this.state.following_id ? (console.log("unfollow"), this.unfollow()) : (console.log("follow"), this.follow()) } }, { key: "follow", value: function () { var e = this; fetch("/api/following", { headers: O(), method: "POST", body: JSON.stringify({ user_id: this.props.user.id }) }).then((function (e) { return e.json() })).then((function (t) { e.setState({ following_id: t.id }) })) } }, { key: "unfollow", value: function () { var e = this; fetch("/api/following/".concat(this.state.following_id), { headers: O(), method: "DELETE" }).then((function (e) { return e.json() })).then((function (t) { console.log(t), e.setState({ following_id: null }), console.log(e.state) })) } }, { key: "render", value: function () { return this.props.user ? Object(h.jsxs)("section", { id: "suggestion-" + this.props.user.id, children: [Object(h.jsx)("img", { src: this.props.user.thumb_url, className: "pic", alt: "Profile pic for " + this.props.user.username }), Object(h.jsxs)("div", { children: [Object(h.jsx)("p", { children: this.props.user.username }), Object(h.jsx)("p", { children: "suggested for you" })] }), Object(h.jsx)("div", { children: Object(h.jsx)("button", { role: "switch", className: this.state.following_id ? "link following active" : "link following", "aria-checked": "false", "aria-label": "Follow " + this.props.user.username, onClick: this.toggleFollow, children: this.state.following_id ? "unfollow" : "follow" }) })] }) : Object(h.jsx)("div", { children: "suggestion" }) } }]), n }(o.a.Component), g = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { suggestions: null }, s.fetchSuggestions = s.fetchSuggestions.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "componentDidMount", value: function () { this.fetchSuggestions() } }, { key: "fetchSuggestions", value: function () { var e = this; fetch("/api/suggestions", { headers: O() }).then((function (e) { return e.json() })).then((function (t) { e.setState({ suggestions: t }) })) } }, { key: "render", value: function () { return this.state.suggestions ? this.state.suggestions.map((function (e) { return Object(h.jsx)(v, { user: e }, "suggestion-" + e.id) })) : Object(h.jsx)("div", {}) } }]), n }(o.a.Component), x = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n() { return Object(c.a)(this, n), t.apply(this, arguments) } return Object(r.a)(n, [{ key: "render", value: function () { return Object(h.jsxs)("div", { children: [Object(h.jsxs)("p", { children: [Object(h.jsx)("strong", { children: this.props.username }), this.props.text] }), Object(h.jsx)("p", { className: "timestamp", children: this.props.display_time })] }) } }]), n }(o.a.Component), y = x, w = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n() { return Object(c.a)(this, n), t.apply(this, arguments) } return Object(r.a)(n, [{ key: "getLastComment", value: function () { var e = this.props.comments.length - 1; return this.props.comments[e] } }, { key: "render", value: function () { var e = this.getLastComment(); return Object(h.jsx)("div", { className: "comments", children: e ? Object(h.jsx)(y, { text: e.text, username: e.user.username, display_time: e.display_time }) : "" }) } }]), n }(o.a.Component), S = w, N = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).updateModalState = e.updateModalState, s.hideModal = s.hideModal.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "hideModal", value: function (e) { (e.target.classList.contains("modal-bg") || e.target.classList.contains("close") || e.target.classList.contains("fa-times")) && (this.updateModalState(!1), e.stopPropagation(), document.body.style.overflowY = "auto") } }, { key: "render", value: function () { var e = this.props.isShowing, t = this.props.post; return Object(h.jsxs)("div", { className: e ? "modal-bg" : "modal-bg hidden", onClick: this.hideModal, children: [Object(h.jsx)("button", { autoFocus: !0, className: "close", "aria-label": "Close Button", onClick: this.hideModal, children: Object(h.jsx)("i", { className: "fas fa-times" }) }), Object(h.jsxs)("div", { className: "modal", role: "dialog", "aria-live": "assertive", children: [Object(h.jsx)("div", { className: "featured-image", style: { backgroundImage: "url(" + t.image_url + ")" } }), Object(h.jsxs)("div", { className: "container", children: [Object(h.jsxs)("h3", { children: [Object(h.jsx)("img", { className: "pic", alt: "Profile of the person who created the post", src: t.user.thumb_url }), " ", t.user.username] }), Object(h.jsx)("div", { className: "body", children: t.comments.map((function (e) { return Object(h.jsx)(y, { text: e.text, username: e.user.username, display_time: e.display_time }, "modal-comment-" + e.id) })) })] })] })] }) } }, { key: "componentDidUpdate", value: function () { } }]), n }(o.a.Component), _ = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { isModalShowing: !1 }, s.showModal = s.showModal.bind(Object(b.a)(s)), s.updateModalState = s.updateModalState.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "updateModalState", value: function (e) { this.setState({ isModalShowing: e }), this.numCommentsButton.focus() } }, { key: "showModal", value: function () { this.setState({ isModalShowing: !0 }) } }, { key: "componentDidUpdate", value: function () { this.state.isModalShowing ? (a.a.render(Object(h.jsx)(N, { post: this.props.post, isShowing: this.state.isModalShowing, updateModalState: this.updateModalState }), document.getElementById("modal")), document.body.style.overflowY = "hidden") : (a.a.render("", document.getElementById("modal")), document.body.style.overflowY = "auto") } }, { key: "render", value: function () { var e = this, t = this.props.post; return t.comments.length > 1 ? Object(h.jsxs)("button", { className: "link", onClick: this.showModal, ref: function (t) { e.numCommentsButton = t }, children: ["View all ", t.comments.length, " comments"] }) : "" } }]), n }(o.a.Component), C = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { value: "", postId: s.props.postId }, s.commentInputRef = o.a.createRef(), s.requeryPost = s.props.callback.bind(Object(b.a)(s)), s.handleChange = s.handleChange.bind(Object(b.a)(s)), s.handleSubmit = s.handleSubmit.bind(Object(b.a)(s)), s.submitOnEnter = s.submitOnEnter.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "handleChange", value: function (e) { console.log("handling change!"), this.setState({ value: e.target.value }) } }, { key: "submitOnEnter", value: function (e) { "Enter" === e.key && console.log("do validate") } }, { key: "handleSubmit", value: function (e) { var t = this; e.preventDefault(); var n = { post_id: this.state.postId, text: this.state.value }; fetch("/api/comments", { method: "POST", headers: O(), body: JSON.stringify(n) }).then((function (e) { return e.json() })).then((function (e) { t.requeryPost(), t.setState({ value: "" }), t.commentInputRef.current.focus() })) } }, { key: "render", value: function () { return Object(h.jsxs)("form", { onSubmit: this.handleSubmit, className: "add-comment", children: [Object(h.jsx)("div", { className: "input-holder", children: Object(h.jsx)("input", { className: "comment-textbox", "aria-label": "Add a comment", placeholder: "Add a comment...", ref: this.commentInputRef, value: this.state.value, onChange: this.handleChange, onKeyDown: this.submitOnEnter }) }), Object(h.jsx)("button", { className: "link", children: "Post" })] }) } }]), n }(o.a.Component), P = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).toggleLike = s.toggleLike.bind(Object(b.a)(s)), s.like = s.like.bind(Object(b.a)(s)), s.unlike = s.unlike.bind(Object(b.a)(s)), s.requeryPost = s.props.requeryPost.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "toggleLike", value: function (e) { this.props.likeId ? (console.log("unlike"), this.unlike()) : (console.log("like"), this.like()) } }, { key: "like", value: function () { var e = this; fetch("/api/posts/likes", { headers: O(), method: "POST", body: JSON.stringify({ post_id: this.props.postId }) }).then((function (e) { return e.json() })).then((function (t) { console.log(t), e.requeryPost() })) } }, { key: "unlike", value: function () { var e = this; fetch("/api/posts/likes/".concat(this.props.likeId), { headers: O(), method: "DELETE" }).then((function (e) { return e.json() })).then((function (t) { console.log(t), e.requeryPost() })) } }, { key: "render", value: function () { var e = this.props.likeId; return Object(h.jsx)("button", { role: "switch", className: "like", "aria-label": "Like Button", "aria-checked": !!e, onClick: this.toggleLike, children: Object(h.jsx)("i", { className: e ? "fas fa-heart" : "far fa-heart" }) }) } }]), n }(o.a.Component), M = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).toggleBookmark = s.toggleBookmark.bind(Object(b.a)(s)), s.bookmark = s.bookmark.bind(Object(b.a)(s)), s.unbookmark = s.unbookmark.bind(Object(b.a)(s)), s.requeryPost = s.props.requeryPost.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "toggleBookmark", value: function (e) { this.props.bookmarkId ? (console.log("unbookmark"), this.unbookmark()) : (console.log("bookmark"), this.bookmark()) } }, { key: "bookmark", value: function () { var e = this; fetch("/api/bookmarks", { headers: O(), method: "POST", body: JSON.stringify({ post_id: this.props.postId }) }).then((function (e) { return e.json() })).then((function (t) { console.log(t), e.requeryPost() })) } }, { key: "unbookmark", value: function () { var e = this; fetch("/api/bookmarks/".concat(this.props.bookmarkId), { headers: O(), method: "DELETE" }).then((function (e) { return e.json() })).then((function (t) { console.log(t), e.requeryPost() })) } }, { key: "render", value: function () { var e = this.props.bookmarkId; return Object(h.jsx)("button", { role: "switch", className: "bookmark", "aria-label": "Bookmark Button", "aria-checked": e ? "true" : "false", onClick: this.toggleBookmark, children: Object(h.jsx)("i", { className: e ? "fas fa-bookmark" : "far fa-bookmark" }) }) } }]), n }(o.a.Component), I = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { post: null, isModalShowing: !1 }, s.requeryPost = s.requeryPost.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "componentDidMount", value: function () { this.setState({ post: this.props.model }) } }, { key: "requeryPost", value: function () { var e = this; fetch("/api/posts/".concat(this.state.post.id), { headers: O() }).then((function (e) { return e.json() })).then((function (t) { e.setState({ post: t }) })) } }, { key: "render", value: function () { var e = this.state.post; return e ? Object(h.jsxs)("section", { className: "card", children: [Object(h.jsxs)("div", { className: "header", children: [Object(h.jsx)("h3", { children: e.user.username }), Object(h.jsx)("i", { className: "fa fa-dots" })] }), Object(h.jsx)("img", { src: e.image_url, alt: "Image posted by " + e.user.username, width: "300", height: "300" }), Object(h.jsxs)("div", { className: "info", children: [Object(h.jsxs)("div", { className: "buttons", children: [Object(h.jsxs)("div", { children: [Object(h.jsx)(P, { postId: e.id, likeId: e.current_user_like_id, requeryPost: this.requeryPost }), Object(h.jsx)("i", { className: "far fa-comment" }), Object(h.jsx)("i", { className: "far fa-paper-plane" })] }), Object(h.jsx)("div", { children: Object(h.jsx)(M, { postId: e.id, bookmarkId: e.current_user_bookmark_id, requeryPost: this.requeryPost }) })] }), Object(h.jsx)("p", { className: "likes", children: Object(h.jsxs)("strong", { children: [e.likes.length, " ", 1 === e.likes.length ? "like" : "likes"] }) }), Object(h.jsxs)("div", { className: "caption", children: [Object(h.jsxs)("p", { children: [Object(h.jsx)("strong", { children: e.user.username }), e.caption] }), Object(h.jsx)("p", { className: "timestamp", children: e.display_time })] }), Object(h.jsx)(_, { post: e }), Object(h.jsx)(S, { comments: e.comments })] }), Object(h.jsx)(C, { callback: this.requeryPost, postId: e.id })] }) : Object(h.jsx)("div", {}) } }]), n }(o.a.Component), E = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { posts: null }, s.fetchPosts = s.fetchPosts.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "componentDidMount", value: function () { this.fetchPosts() } }, { key: "fetchPosts", value: function () { var e = this; fetch("/api/posts", { headers: O() }).then((function (e) { return e.json() })).then((function (t) { e.setState({ posts: t }) })) } }, { key: "render", value: function () { return this.state.posts ? this.state.posts.map((function (e) { return Object(h.jsx)(I, { model: e }, "post-" + e.id) })) : Object(h.jsx)("div", {}) } }]), n }(o.a.Component), q = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n(e) { var s; return Object(c.a)(this, n), (s = t.call(this, e)).state = { profile: null }, s.fetchProfile = s.fetchProfile.bind(Object(b.a)(s)), s } return Object(r.a)(n, [{ key: "componentDidMount", value: function () { this.fetchProfile() } }, { key: "fetchProfile", value: function () { var e = this; fetch("/api/profile", { headers: O() }).then((function (e) { return e.json() })).then((function (t) { e.setState({ profile: t }) })) } }, { key: "render", value: function () { return this.state.profile ? Object(h.jsxs)("div", { children: [Object(h.jsx)("img", { className: "pic", src: this.state.profile.thumb_url, alt: "Profile pic for " + this.state.profile.username }), Object(h.jsx)("h2", { children: this.state.profile.username })] }) : Object(h.jsx)("div", { children: "empty profile." }) } }]), n }(o.a.Component), T = function (e) { Object(l.a)(n, e); var t = Object(u.a)(n); function n() { return Object(c.a)(this, n), t.apply(this, arguments) } return Object(r.a)(n, [{ key: "render", value: function () { return Object(h.jsxs)("div", { children: [Object(h.jsxs)("nav", { className: "main-nav", children: [Object(h.jsx)("h1", { children: "Photo App" }), Object(h.jsx)(j, {})] }), Object(h.jsxs)("aside", { children: [Object(h.jsx)("header", { children: Object(h.jsx)(q, {}) }), Object(h.jsxs)("div", { className: "suggestions", children: [Object(h.jsx)("p", { className: "suggestion-text", children: "Suggestions for you" }), Object(h.jsx)("div", { children: Object(h.jsx)(g, {}) })] })] }), Object(h.jsxs)("main", { className: "content", children: [Object(h.jsx)("header", { className: "stories", children: Object(h.jsx)(k, {}) }), Object(h.jsx)("div", { id: "posts", children: Object(h.jsx)(E, {}) })] })] }) } }]), n }(o.a.Component), B = T; n(14); function D() { a.a.render(Object(h.jsx)(B, {}), document.getElementById("root")) } m("csrf_access_token") && "3000" !== window.location.port ? (console.log("Authentication handled via CSRF + Http-only cookie."), D()) : (console.log("3000" === window.location.port), console.log("Authentication handled via REST API Token."), function (e, t, n) { var s = { username: e, password: t }; fetch("/api/token/", { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify(s) }).then((function (e) { return e.json() })).then((function (e) { !function (e, t) { var n = new Date; n.setTime(n.getTime() + 31536e6); var s = "expires=" + n.toUTCString(); document.cookie = e + "=" + t + ";" + s }("access_token_cookie_js", e.access_token), n() })) }("webdev", "password", D)) } }, [[15, 1, 2]]]);
//# sourceMappingURL=main.32b95861.chunk.js.map